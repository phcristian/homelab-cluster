---
### Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  labels:
    {{- include "media-server.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "media-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "media-server.selectorLabels" . | nindent 8 }}
        app: prowlarr
    spec:
      containers:
        - name: {{ .Chart.Name }}
          env:
          - name: PGID
            value: "{{ .Values.global.pgid }}"
          - name: PUID
            value: "{{ .Values.global.puid }}"
          image: docker.io/linuxserver/prowlarr 
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: "/ping"
              port: 9696
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 20
          ports:
            - name: prowlarr
              containerPort: 9696
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /config
              subPath: config/prowlarr
      volumes:
        - name: config-volume
          persistentVolumeClaim:
            claimName: config-pvc
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: "ScheduleAnyway"
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: {{ .Release.Name }}
---
### Service
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  labels:
    {{- include "media-server.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: 9696
      targetPort: 9696
      protocol: TCP
      name: prwolarr
  selector:
    app: prowlarr
---
### Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr
  labels:
    {{- include "media-server.labels" . | nindent 4 }}
  {{- with .Values.prowlarr.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingressClassName }}
  rules:
  - host: {{ .Values.prowlarr.ingress.suffix }}.{{ .Values.global.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prowlarr
            port:
              number: 9696
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: prowlarr
  labels:
    app: prowlarr
    {{- include "media-server.labels" . | nindent 4}}
spec:
  entryPoints:
  - websecure
  routes:
  - match: Host(`{{ .Values.prowlarr.ingress.suffix }}.{{ .Values.global.host }}`)
    kind: Rule
    services:
    - name: prowarr
      port: 9696
  tls:
    secretName: {{ .Values.prowlarr.ingress.tls.secretName }}
